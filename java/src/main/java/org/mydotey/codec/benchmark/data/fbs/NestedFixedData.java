// automatically generated by the FlatBuffers compiler, do not modify

package org.mydotey.codec.benchmark.data.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class NestedFixedData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static NestedFixedData getRootAsNestedFixedData(ByteBuffer _bb) { return getRootAsNestedFixedData(_bb, new NestedFixedData()); }
  public static NestedFixedData getRootAsNestedFixedData(ByteBuffer _bb, NestedFixedData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public NestedFixedData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public org.mydotey.codec.benchmark.data.fbs.FixedData fFixed() { return fFixed(new org.mydotey.codec.benchmark.data.fbs.FixedData()); }
  public org.mydotey.codec.benchmark.data.fbs.FixedData fFixed(org.mydotey.codec.benchmark.data.fbs.FixedData obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public org.mydotey.codec.benchmark.data.fbs.NestedFixedData fNested() { return fNested(new org.mydotey.codec.benchmark.data.fbs.NestedFixedData()); }
  public org.mydotey.codec.benchmark.data.fbs.NestedFixedData fNested(org.mydotey.codec.benchmark.data.fbs.NestedFixedData obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static void startNestedFixedData(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addFFixed(FlatBufferBuilder builder, int fFixedOffset) { builder.addStruct(0, fFixedOffset, 0); }
  public static void addFNested(FlatBufferBuilder builder, int fNestedOffset) { builder.addOffset(1, fNestedOffset, 0); }
  public static int endNestedFixedData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
}

